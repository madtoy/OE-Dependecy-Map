{"google":"","body":"Hierarchical-dependency-graph\r\n=============================\r\n\r\nDisplays hierarchical dependency graph.\r\n\r\n# Dependency\r\n\r\n* [krasimir's EventBus implementation][]\r\n\r\n# Requirement\r\n\r\n* HTML5 compatibile browser with Canvas support\r\n\r\n# Syntaxt\r\n\r\n## Create the graph drawer\r\n\r\nCreate a container div\r\n\r\n\t<div id=\"container\"></div>\r\n\r\nIncludes the proper Javascript libs in the correct order\r\n\r\n \t<script type=\"text/javascript\" src=\"EventBus.js\"></script>\r\n\t<script type=\"text/javascript\" src=\"hgraph.js\"></script>\r\n\r\nCreate GraphDrawer object\r\n\r\n\tvar graph = new GraphDrawer(document.getElementById(\"container\"))\r\n\r\n## Adding items and connections\r\n\r\nMinimal properties of item\r\n* id - identifier\r\n* name - what to display\r\n* level - level of item\r\n\r\nAny other properties can be added, but must differs from \"properties\".\r\n\r\n### One-by-one\r\n\r\n\tgraph.addItem({\r\n\t\t\"id\": \"obj1\".\r\n\t\t\"name\": \"Obejct one\",\r\n\t\t\"level\": 1\r\n\t});\r\n\tgraph.addItem({\r\n\t\t\"id\": \"obj2\".\r\n\t\t\"name\": \"Obejct two\",\r\n\t\t\"level\": 2\r\n\t});\r\n\tgraph.addConnection(\"obj2\", \"obj1\");\r\n\tgraph.draw();\r\n\r\naddConnection detects if obj1 is at higher level and sets the proper way.\r\n\r\n### From JSON\r\n\t\r\nJSON syntax\r\n\t\r\n\t{\r\n\t\t\"items\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": \"obj1a\",\r\n\t\t\t\t\"name\": \"Obejct one A\",\r\n\t\t\t\t\"level\": 1\r\n\t\t\t},{\r\n\t\t\t\t\"id\": \"obj1b\",\r\n\t\t\t\t\"name\": \"Obejct one B\",\r\n\t\t\t\t\"level\": 1\r\n\t\t\t},{\r\n\t\t\t\t\"id\": \"obj2\",\r\n\t\t\t\t\"name\": \"Obejct two\",\r\n\t\t\t\t\"level\": 2\r\n\t\t\t},{\r\n\t\t\t\t\"id\": \"obj3\",\r\n\t\t\t\t\"name\": \"Obejct three\",\r\n\t\t\t\t\"level\": 2\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"connections\": [\r\n\t\t\t{\r\n\t\t\t\t\"item\": \"obj2\",\r\n\t\t\t\t\"needed\": \"obj1a\"\r\n\t\t\t},{\r\n\t\t\t\t\"item\": \"obj3\",\r\n\t\t\t\t\"needed\": [\r\n\t\t\t\t\t\"obj1a\",\r\n\t\t\t\t\t\"obj1b\"\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\r\n...and the Javascript code based on jQuery\r\n\r\n\t$.getJSON('items.json', function(data) {\r\n\t\tgraph.addJSON(data);\r\n\t\tgraph.draw();\r\n\t});\r\n\r\n## Create hash code of settings\r\n\r\nExample\r\n\r\n\t<textarea id=\"hash\" readonly=\"readonly\"></textarea>\r\n\t<input type=\"button\" id=\"decode\" value=\"Decode\" />\r\n\r\nJavascript\r\n\r\n\tgraph.click = function(item, e){\r\n\t\tdocument.getElementById(\"hash\").value = graph.serialize();\r\n\t}\r\n\tdocument.getElementById(\"decode\").onclick = function(e){\r\n\t\tvar data = document.getElementById(\"hash\").value;\r\n\t\tif(data.length > 0){\r\n\t\t\tgraph.unserialize(data);\r\n\t\t}\r\n\t}\r\n\r\n## Prefrences\r\n\r\nhgraph.js contains a Prefs object. Here you can set the items font, padding, margin, colors, column's margin, etc.\r\n\r\n[krasimir's Simple JavaScript class]: https://github.com/krasimir/EventBus","name":"Hierarchical-dependency-graph","tagline":"html5, canvas, graph, plot","note":"Don't delete this file! It's used internally to help with page regeneration."}